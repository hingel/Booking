// <auto-generated />
using System;
using Booking.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241003144348_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking.DataAccess.Models.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("Booking.DataAccess.Models.Table", b =>
                {
                    b.OwnsMany("Booking.DataAccess.Models.Booking", "Bookings", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("DateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<decimal>("Duration")
                                .HasPrecision(2, 1)
                                .HasColumnType("decimal(2,1)");

                            b1.Property<int>("NoOfPersons")
                                .HasColumnType("int");

                            b1.Property<Guid>("TableId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("TableId");

                            b1.ToTable("Bookings");

                            b1.WithOwner("Table")
                                .HasForeignKey("TableId");

                            b1.OwnsOne("Booking.DataAccess.Models.Contact", "Contact", b2 =>
                                {
                                    b2.Property<Guid>("BookingId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Email")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("nvarchar(255)");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("nvarchar(255)");

                                    b2.Property<string>("PhoneNumber")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("nvarchar(255)");

                                    b2.HasKey("BookingId");

                                    b2.ToTable("Bookings");

                                    b2.WithOwner()
                                        .HasForeignKey("BookingId");
                                });

                            b1.Navigation("Contact")
                                .IsRequired();

                            b1.Navigation("Table");
                        });

                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
